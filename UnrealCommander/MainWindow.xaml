<Window x:Class="UnrealCommander.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:operationOptionTypes="clr-namespace:UnrealAutomationCommon.Operations.OperationOptionTypes;assembly=UnrealAutomationCommon"
        xmlns:operations="clr-namespace:UnrealAutomationCommon.Operations;assembly=UnrealAutomationCommon"
        xmlns:local="clr-namespace:UnrealCommander"
        xmlns:options="clr-namespace:UnrealCommander.Options"
        xmlns:baseOperations="clr-namespace:UnrealAutomationCommon.Operations.BaseOperations;assembly=UnrealAutomationCommon"
        xmlns:Unreal="clr-namespace:UnrealAutomationCommon.Unreal;assembly=UnrealAutomationCommon"
        mc:Ignorable="d"
        Title="Unreal Commander" Height="800" Width="1200"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Closing="Window_Closing">
    <DockPanel LastChildFill="True">
        <DataGrid Name="TargetGrid" ItemsSource="{ Binding PersistentState.Targets}"
                  SelectedItem="{Binding Path=SelectedTarget, Mode=TwoWay}"
                  ContextMenuOpening="TargetGrid_OnContextMenuOpening"
                  AutoGenerateColumns="False" CanUserAddRows="True" HorizontalScrollBarVisibility="Hidden"
                  Margin="0,0,0,0" DockPanel.Dock="Top" Height="Auto">
            <DataGrid.ContextMenu>
                <ContextMenu>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" IsReadOnly="True" Binding="{Binding Name}" Width="2*"/>
                <DataGridTextColumn Header="Type" IsReadOnly="True" Binding="{Binding TypeName}"/>
                <DataGridTextColumn Header="Location" IsReadOnly="True" Binding="{Binding TargetPath}" Width="10*"/>
                <DataGridTextColumn Header="Engine" IsReadOnly="True" Binding="{Binding Path=(Unreal:IEngineInstallProvider.EngineInstall).Version}"/>
                <DataGridTextColumn Header="Engine Location" IsReadOnly="True" Binding="{Binding Path=(Unreal:IEngineInstallProvider.EngineInstall).LocationString}" />
            </DataGrid.Columns>
        </DataGrid>
        <DockPanel DockPanel.Dock="Top" Margin="10,10,10,0" >
            <TextBlock DockPanel.Dock="Left" Text="{Binding Status}"/>
            <Button DockPanel.Dock="Right" Click="AddTarget" Padding="20,2" Width="Auto" HorizontalAlignment="Right">
                <Run Text="Add" />
            </Button>
        </DockPanel>
        <Grid Margin="10,0,10,10" Height="Auto">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <WrapPanel Grid.Row="0">
                <WrapPanel.Resources>
                    <local:ContainsConverter x:Key="ContainsConverter"/>
                </WrapPanel.Resources>
                <GroupBox Header="Operation" Margin="0,5" Padding="10">
                    <StackPanel VerticalAlignment="Center">
                        <ListBox ItemsSource="{Binding OperationTypes}" SelectedItem="{Binding Path=PersistentState.OperationType}" BorderBrush="Transparent" Background="Transparent">
                            <ListBox.Resources>
                                <local:TypeToStringConverter x:Key="TypeToStringConverter"/>
                                <local:OperationSupportedConverter x:Key="OperationSupportedConverter"/>
                            </ListBox.Resources>
                            <ListBox.ItemContainerStyle>
                                <!-- Style to get rid of the selection visual -->
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type baseOperations:Operation}">
                                    <RadioButton Content="{Binding Converter={StaticResource TypeToStringConverter}}" GroupName="OperationTypes">
                                        <!-- Binding IsChecked to IsSelected requires no support code -->
                                        <RadioButton.IsChecked>
                                            <Binding Path="IsSelected"
                                                     RelativeSource="{RelativeSource AncestorType=ListBoxItem}"
                                                     Mode="TwoWay" />
                                        </RadioButton.IsChecked>
                                        <RadioButton.IsEnabled>
                                            <MultiBinding Converter="{StaticResource OperationSupportedConverter}">
                                                <Binding />
                                                <Binding Path="PersistentState.OperationParameters.Target"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                            </MultiBinding>
                                        </RadioButton.IsEnabled>
                                        <RadioButton.Focusable>
                                            <MultiBinding Converter="{StaticResource OperationSupportedConverter}">
                                                <Binding />
                                                <Binding Path="PersistentState.OperationParameters.Target"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                            </MultiBinding>
                                        </RadioButton.Focusable>
                                        <RadioButton.IsHitTestVisible>
                                            <MultiBinding Converter="{StaticResource OperationSupportedConverter}">
                                                <Binding />
                                                <Binding Path="PersistentState.OperationParameters.Target"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                            </MultiBinding>
                                        </RadioButton.IsHitTestVisible>
                                    </RadioButton>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </GroupBox>
                <local:OptionsContainer Header="Configuration" Margin="0,5" Padding="10" Style="{StaticResource OptionsContainer}">
                    <StackPanel VerticalAlignment="Center">
                        <options:BuildConfigurationOptionsControl x:Name="BuildConfigurationOptionsControlElement" AllowedBuildConfigurations="{Binding AllowedBuildConfigurations}"/>
                    </StackPanel>
                    <GroupBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource ContainsConverter}">
                            <Binding Path="EnabledOptionSets" />
                            <Binding Source="{x:Type TypeName=operationOptionTypes:BuildConfigurationOptions}" />
                        </MultiBinding>
                    </GroupBox.IsEnabled>
                </local:OptionsContainer>
                <local:OptionsContainer Header="Insights" Margin="0,5" Padding="10" Style="{StaticResource OptionsContainer}">
                    <StackPanel VerticalAlignment="Center">
                        <options:InsightsOptionsControl x:Name="InsightsOptionsControlElement" />
                    </StackPanel>
                    <GroupBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource ContainsConverter}">
                            <Binding Path="EnabledOptionSets" />
                            <Binding Source="{x:Type TypeName=operationOptionTypes:InsightsOptions}" />
                        </MultiBinding>
                    </GroupBox.IsEnabled>
                </local:OptionsContainer>
                <local:OptionsContainer Header="Flags" Margin="0,5" Padding="10" Style="{StaticResource OptionsContainer}">
                    <StackPanel VerticalAlignment="Center">
                        <options:FlagOptionsControl x:Name="FlagOptionsControlElement" />
                    </StackPanel>
                    <GroupBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource ContainsConverter}">
                            <Binding Path="EnabledOptionSets" />
                            <Binding Source="{x:Type TypeName=operationOptionTypes:FlagOptions}" />
                        </MultiBinding>
                    </GroupBox.IsEnabled>
                </local:OptionsContainer>
                <local:OptionsContainer Header="Automation" Margin="0,5" Padding="10" Style="{StaticResource OptionsContainer}">
                    <StackPanel VerticalAlignment="Center">
                        <options:AutomationOptionsControl x:Name="AutomationOptionsControlElement" TestName="{Binding OperationTarget.TestName, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=local:MainWindow}, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <GroupBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource ContainsConverter}">
                            <Binding Path="EnabledOptionSets" />
                            <Binding Source="{x:Type TypeName=operationOptionTypes:AutomationOptions}" />
                        </MultiBinding>
                    </GroupBox.IsEnabled>
                </local:OptionsContainer>
            </WrapPanel>
            <GroupBox Header="Additional Arguments" Grid.Row="1" Margin="0,5" Padding="10">
                <TextBox Text="{Binding PersistentState.OperationParameters.AdditionalArguments, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </GroupBox>
            <GroupBox Header="Output" Grid.Row="2" Margin="0,5" Padding="10" >
                <ScrollViewer Name="OutputScrollViewer">
                    <RichTextBox Name="OutputTextBox" IsReadOnly="True" Background="#202020" Foreground="#EEEEEE" FontFamily="Consolas">
                        <RichTextBox.Resources>
                            <Style TargetType="{x:Type Paragraph}">
                                <Setter Property="Margin" Value="0"/>
                            </Style>
                        </RichTextBox.Resources>
                        <RichTextBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Clear" Click="LogClear" />
                            </ContextMenu>
                        </RichTextBox.ContextMenu>
                    </RichTextBox>
                </ScrollViewer>
            </GroupBox>
            <GroupBox Header="Command" Grid.Row="3" Margin="0,5" Padding="10" >
                <TextBox Name="CommandTextBox" IsReadOnly="True" Text="{Binding VisibleCommand, Mode=OneWay}"  TextWrapping="Wrap" FontFamily="Consolas"></TextBox>
            </GroupBox>
            <WrapPanel Grid.Row="4" HorizontalAlignment="Right">
                <Button Click="CopyCommand" IsEnabled="{Binding CanExecute}" Margin="0,5,5,5" Padding="20,2" Width="Auto" HorizontalAlignment="Right">
                    <TextBlock Text="Copy"></TextBlock>
                </Button>
                <Button Click="Execute" IsEnabled="{Binding CanExecute}" Margin="0,5,5,5" Padding="20,2" Width="Auto" HorizontalAlignment="Right">
                    <Run Text="{Binding Operation.OperationName, Mode=OneWay}" />
                </Button>
                <Button Click="Terminate" IsEnabled="{Binding IsRunningOperation}" Margin="0,5,5,5" Padding="20,2" Width="Auto" HorizontalAlignment="Right">
                    <Run Text="Terminate" />
                </Button>
            </WrapPanel>
        </Grid>
    </DockPanel>
</Window>
